/*
QUESTION 3b
Create a function “countTimes” that takes in two arguments (an array and a search value). “countTimes”
should return the number of times the search value is present in the array.
Example: countTimes([1, 8, 9, 9, 10], 9) -> 2
*/


Using Filter 

function countTimes(arr, value) {
 let count = 0
 
count = arr.filter(num => num == value).length;
return count
}

console.log(countTimes([1, 8, 9, 9, 10], 9)) 


//Using for EAch


function countTimes(arr, value) {
 let count = 0
 
arr.forEach(element => {
  if (element === value) {
    count += 1;
  }
});
  return count
}

console.log(countTimes([1, 8, 9, 9, 10], 9)) 



// using for loop

function countTimes(arr, value) {
 let count = 0
 
for (let i = 0; i < arr.length; i++) {
  if (value === arr[i]) {
    count++
  }
}
 
 
  return count
}

console.log(countTimes([1, 8, 9, 9, 10], 9)) 



Using Reduce
const occurrencesOf = (number,numbers) => numbers.reduce((counter, currentNumber)=> (number === currentNumber ? counter+1 : counter),0);

  


console.log(occurrencesOf(9 ,[1, 8, 9, 9, 10])) 
